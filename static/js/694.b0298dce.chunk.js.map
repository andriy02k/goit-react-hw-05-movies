{"version":3,"file":"static/js/694.b0298dce.chunk.js","mappings":"4QAKA,MA4DA,EA5DqBA,KAAO,IAADC,EAAAC,EAEzB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,OACdC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,MACzCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAqB,QAAfV,EAACO,EAASI,aAAK,IAAAX,OAAA,EAAdA,EAAgBO,UAYxC,IAVAK,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,IAAWX,GACRY,MAAKC,IACJV,EAAeU,EAAS,IAEzBC,OAAMC,IAAkB,IAAjB,QAAEC,GAASD,EACjBE,QAAQC,IAAIF,EAAQ,GACpB,GACL,CAAChB,KAECE,EACH,OAAOiB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,kBAGZ,MAAM,MAAEC,EAAK,YAAEC,EAAW,aAAEC,EAAY,aAAEC,EAAY,SAAEC,EAAQ,OAAEC,GAAWxB,EAC7E,OACEyB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMR,SAAA,EACnBD,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAoB,QAAlB/B,EAAEQ,EAASwB,eAAO,IAAAhC,EAAAA,EAAI,IAAK6B,UAAU,oDAAmDR,SAAC,aACjGO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaR,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,OAAKa,IACDV,EAAW,mCAAAW,OACwBX,GACjCY,EAEFC,MAAO,IACPC,IAAI,YAERT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBR,SAAA,EAClCO,EAAAA,EAAAA,MAAA,MAAIC,UAAU,wBAAuBR,SAAA,CAAEC,EAAM,IAAE,IAAIgB,KAAKd,GAAce,cAAc,QACpFX,EAAAA,EAAAA,MAAA,KAAGC,UAAU,YAAWR,SAAA,CAAC,eAAamB,KAAKC,MAAqB,GAAfhB,GAAmB,QACpEL,EAAAA,EAAAA,KAAA,MAAIS,UAAU,YAAWR,SAAC,cAC1BD,EAAAA,EAAAA,KAAA,KAAGS,UAAU,YAAWR,SAAEK,KAC1BN,EAAAA,EAAAA,KAAA,MAAIS,UAAU,YAAWR,SAAC,WACzBM,EAAOe,KAAI,CAACC,EAAIC,KAEbxB,EAAAA,EAAAA,KAAA,KAAaS,UAAU,cAAaR,SAAEsB,EAAGE,MAAjCD,YAKhBhB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBR,SAAA,EAC7BD,EAAAA,EAAAA,KAAC0B,EAAAA,GAAO,CAACjB,UAAU,oDAAoDE,GAAG,OAAMV,SAAC,UAGjFD,EAAAA,EAAAA,KAAC0B,EAAAA,GAAO,CAACjB,UAAU,oDAAoDE,GAAG,UAASV,SAAC,gBAIxFD,EAAAA,EAAAA,KAAC2B,EAAAA,GAAM,MACH,C,qEC3DV,MAEaC,E,OAAMC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACJC,QALQ,sCCAHC,EAAmBC,UAC5B,MAAM,KAACC,SAAcP,EAAIQ,IAAI,oBAC7B,OAAOD,EAAKE,OAAO,EAGV7C,EAAa0C,UACtB,MAAM,KAAEC,SAAeP,EAAIQ,IAAI,UAADtB,OAAWwB,IACzC,OAAOH,CAAI,EAGFI,EAAkBL,UAC3B,MAAM,KAAEC,SAAeP,EAAIQ,IAAI,UAADtB,OAAWwB,EAAE,aAC3C,OAAOH,CAAI,EAGFK,EAAiBN,UAC1B,MAAM,KAAEC,SAAeP,EAAIQ,IAAI,UAADtB,OAAWwB,EAAE,aAC3C,OAAOH,CAAI,EAGFM,EAAiBP,UAC1B,MAAM,KAACC,SAAcP,EAAIQ,IAAI,gBAAiB,CAC9CL,OAAQ,CAAEW,WAEV,OAAOP,EAAKE,OAAO,C","sources":["Pages/MovieDetails/MovieDetails.jsx","api/api.js","api/getItem.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport { useParams, NavLink, Link, useLocation, Outlet } from 'react-router-dom';\nimport { fetchMovie } from '../../api/getItem'\nimport defaultImg from '../../images/image.webp'\n\nconst MovieDetails = () => {\n\n  const { moviesId } = useParams();\n  const [singleMovie, setSingleMovie] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location.state?.location);\n\n  useEffect(() => {\n      fetchMovie(moviesId)\n        .then(response => {\n          setSingleMovie(response);\n        })\n        .catch(({ message }) => {\n          console.log(message);\n        });\n  }, [moviesId])\n  \n  if (!singleMovie) {\n    return <p>404 Not Found</p>;\n  }\n\n  const { title, poster_path, release_date, vote_average, overview, genres } = singleMovie;\n  return (\n    <div className='p-12'>\n      <Link to={backLink.current ?? '/'} className='bg-blue-500 text-white p-2 rounded mb-4 flex w-20'>go back</Link>\n      <div className='flex gap-12'>\n        <img src={\n            poster_path ?\n            `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : defaultImg\n            }\n            width={250}\n            alt=\"poster\"\n            />\n        <div className='flex flex-col gap-2'>\n          <h1 className='font-medium text-36px'>{title}({new Date(release_date).getFullYear()})</h1>\n          <p className='text-24px'>User Score: {Math.floor(vote_average * 10)}%</p>\n          <h2 className='text-24px'>Overview</h2>\n          <p className='text-24px'>{overview}</p>\n          <h3 className='text-24px'>Genres</h3>\n          {genres.map((el, idx) => {\n            return (\n              <p key={idx} className='font-normal'>{el.name}</p>\n            )\n          })}\n        </div>\n      </div>\n      <div className='flex gap-12 mt-4'>\n          <NavLink className='bg-blue-500 text-white p-2 rounded mb-4 flex w-20' to=\"cast\">\n            Cast\n          </NavLink>\n          <NavLink className='bg-blue-500 text-white p-2 rounded mb-4 flex w-20' to=\"reviews\">\n            Reviews\n          </NavLink>\n      </div>\n      <Outlet/>\n    </div>\n  )\n}\n\nexport default MovieDetails","import axios from 'axios'\n\nconst API_KEY = '64389f8c9597f749526cf3aa862ff846';\n\nexport const api = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: API_KEY,\n    },\n});","import {api} from './api'\n\nexport const trendMoviesFetch = async () => {\n    const {data} = await api.get('trending/all/day');\n    return data.results;\n};\n\nexport const fetchMovie = async id => {\n    const { data } = await api.get(`/movie/${id}`);\n    return data;\n};\n\nexport const getMovieCredits = async id => {\n    const { data } = await api.get(`/movie/${id}/credits`);\n    return data;\n}\n\nexport const getMovieReview = async id => {\n    const { data } = await api.get(`/movie/${id}/reviews`);\n    return data;\n}\n\nexport const getSearchMovie = async query => {\n    const {data} = await api.get('/search/movie', {\n    params: { query, },\n  });\n    return data.results;\n}\n"],"names":["MovieDetails","_location$state","_backLink$current","moviesId","useParams","singleMovie","setSingleMovie","useState","location","useLocation","backLink","useRef","state","useEffect","fetchMovie","then","response","catch","_ref","message","console","log","_jsx","children","title","poster_path","release_date","vote_average","overview","genres","_jsxs","className","Link","to","current","src","concat","defaultImg","width","alt","Date","getFullYear","Math","floor","map","el","idx","name","NavLink","Outlet","api","axios","baseURL","params","api_key","trendMoviesFetch","async","data","get","results","id","getMovieCredits","getMovieReview","getSearchMovie","query"],"sourceRoot":""}